// Generated by delombok at Sun Dec 01 13:28:22 MSK 2013
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package spaceisnear.game.messages;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import spaceisnear.game.bundles.MessageBundle;

/**
 * Sent only by server.
 *
 * @author White Oak
 */
public class MessageMoved extends DirectedMessage implements NetworkableMessage {
	private final int x;
	private final int y;
	private final int id;
	
	public MessageMoved(int x, int y, int id) {
		super(MessageType.MOVED);
		this.x = x;
		this.y = y;
		this.id = id;
	}
	
	protected MessageMoved(int x, int y, int id, int unused) {
		super(MessageType.TELEPORTED);
		this.x = x;
		this.y = y;
		this.id = id;
	}
	
	@Override
	public MessageBundle getBundle() {
		ByteArrayOutputStream b = null;
		try (final ByteArrayOutputStream baos = new ByteArrayOutputStream();
final DataOutputStream daos = new DataOutputStream(baos);) {
				daos.writeInt(x);
				daos.writeInt(y);
				daos.writeInt(id);
				daos.close();
				b = baos;
			} catch (IOException ex) {
				Logger.getLogger(MessageMoved.class.getName()).log(Level.SEVERE, null, ex);
			}
			byte[] by = b.toByteArray();
			MessageBundle mb = new MessageBundle(getMessageType());
			mb.bytes = by;
			mb.messageType = getMessageType();
			return mb;
		}
		
		public static MessageMoved getInstance(byte[] b) {
			try (final ByteArrayInputStream bais = new ByteArrayInputStream(b);
final DataInputStream dais = new DataInputStream(bais);) {
					int x = dais.readInt();
					int y = dais.readInt();
					int id = dais.readInt();
					return new MessageMoved(x, y, id);
				} catch (IOException ex) {
					Logger.getLogger(MessageMoved.class.getName()).log(Level.SEVERE, null, ex);
				}
				return null;
			}
			
			
			public int getX() {
				return this.x;
			}
			
			
			public int getY() {
				return this.y;
			}
			
			
			public int getId() {
				return this.id;
			}
		}