0.0.1 r44
+Objects' sending
+Turning host button into 'hosting server and connecting to client' button:
	+new Bundle system (no getBytes, but getBundle in NetworkableMessage)
	+removed server from sin.game.Networking
	+sending and receiving information about new client
	+sending the world to the client
	+adding player when player is connected
	+pausing server when new client is connecting
	+pausing clients when client is connecting
	+unpausing
	+starting server in separate thread
	+adding loading screen (connecting)
+adding some information to Player's object
+new messages: connection broken, rogered, world sent, map sent
+new component: Name

0.0.2 r63
+there are now directed and non-directed messages. Directed cannot be sent to everyone
-Basic items system
    +new items: Cloth, Tool, Environment
-Obstacles' system
    +Obstacles layer
    +checking for reacheableness in PositionComponent
-Atmosphere
    +Atmosphere layer
    +removed from client-side
-Inventory
    +each inventory consists of inventory slots
*PlayerControllableComponent was replaced with GamePlayerPositionComponent
+added NetworkingComponent and MessageToSend for the architecture to look good
-added HealthComponent
    +actual hitpoints
    +server processes health states of players (alive, critical etc)
+added HurtMessage
    +types of damage
+added MessageKnockbacked
*now components that rely on Position search PositionComponent in a list of objects' components
*Players now have different components on server and client: dealt with sending them over the net
*Components had bad newInstance method: recoded
+added enum for components (ComponentType)
*ComponentStates are stored now in a hashmap inside Component for easy-access
*ServerGameObject and ClientGameObject are now subclasses of abstract AbstractGameObject

0.0.3 r70
-Basic items system
    +realized ItemsArchive
    +designed definition's format
    +realized ItemBundle (name, size, blockingAir, blockingPath, imageIds)
    +realized reading definitions of items from file
    +loading images of items into an array of archive
    +adding items from a script
    +sending items over the net 
    +drawing items on the map
+added empty slots on server-side's objects list for networking, ui, etc 
+Camera is always centered at player
+Camera movement for teleporting messages
+Scaling
*Send not the whole world in one time (MessageWorldSent) but all objects in turn instead.
*MessageCreateds are sent with a dealy not to overflow buffer
+Send DiscoveredYourPlayerMessage to get client knowing which object is his player.
*Networking -> ServerNetworking (renamed)

0.0.4 r81
-Basic items system
    +items that block passing through
    +items that prevents air going through
+Obstacles' system
    +added items set blocking tile status
    +items block movement
    *removed from client instance
-Atmosphere
    +added items set blocking-air tile status
    +the separate thread calculating atmosphere and hull breaches
    +if there are no plitkas on the tile then it is counted as hull breach
	+the pressure is set to zero in that point
    *removed from client instance
    +make items block air leaks (for blockingAir items of course)
+Animated player movement
+In-game console
-In-game chat
    +sending messages over the net
    +logging all the messages the server get
    +sending to player only messages that they can hear
    +write player's name the message was sent
    +scrolling
-RADIOSYSTEM
    +two type of messages: local and and frequency-message
    +server discovers whether someone is in range of local message or not
	+local messages are transfered in 4 ways from the player by 10 tiles
*Client will connect properly with bad ping
+LoadingScreen has objects counter
+map sending removed
*movement of players with different FPS was fixed
+Being able to enter nickname
*draw only items that are in the screen (already was done)
*now server (not client) decides whether player is able to move on next tile

0.0.5
-Basic items system
    +stucked/unstucked items
    +pushing unstucked items
	+correctly moving obstacles and air
    -pulling
-Atmosphere
    -knockbacking if big difference between two tiles in pressure
    -gasping if air is leaking 
    -decreasing health if amount of air is not enough to live
-Inventory
    -each inventory slot has his size, item field and name
-HealthComponent
+HurtMessage
    -acceptance on client
+MessageKnockbacked
    -acceptance on client
-Mouse interaction
    -selection of tile where player has clicked
-In-game chat
    -make PM
    -make OOC
    -make some DEBUG messages
    -make some broadcasting
    +ingame commands (like "-debug on/off")
    +scrolling
    *messages are drawn in-bound of log screen
-RADIOSYSTEM
    +server discovers whether someone is in range of local message or not
	+air unrecheable tiles do not let local messages to get through
    -server discovers whether someone is in range of frequncy message or not
-gotta do something with disconnected players
+being able to run server in no-GUI mode
+server should process incoming messages in the same thread as processing objects to avoid concurrent modification