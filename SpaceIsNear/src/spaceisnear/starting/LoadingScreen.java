// Generated by delombok at Sun Dec 01 13:28:22 MSK 2013
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package spaceisnear.starting;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.GL10;
import com.badlogic.gdx.graphics.g2d.BitmapFont;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.ui.*;
import lombok.RequiredArgsConstructor;
import spaceisnear.game.Corev2;

/**
 * @author White Oak
 */
@RequiredArgsConstructor public class LoadingScreen implements Screen {

    private Corev2 core;
    public static int LOADING_AMOUNT, CURRENT_AMOUNT;
    private final Stage stage;
    Table table;
    private Label progress;

    public LoadingScreen() {
//	this.core = Main.main.core;
	stage = new Stage();
	table = new Table();
	BitmapFont font = new BitmapFont(Gdx.files.classpath("default.fnt"), false);
	final Skin skin = new Skin(Gdx.files.classpath("uiskin.json"));
	Label.LabelStyle labelStyle = new Label.LabelStyle(font, Color.YELLOW);
	Label loadingLabel = new Label("Loading", labelStyle);
	progress = new Label("0/0", labelStyle);
	table.setFillParent(true);
	table.add(loadingLabel);
	table.row();
	table.add(progress);
	stage.addActor(table);
    }

    public void update() {
	if (core.isNotpaused()) {
	    System.out.println("Moving to Core...");
//	    Main.main.setScreen(core);
	}
    }

    @Override
    public void render(float delta) {
	Gdx.gl.glClearColor(0, 0, 0, 1);
	Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
	progress.setText(CURRENT_AMOUNT + " / " + LOADING_AMOUNT);
	stage.draw();
	update();
    }

    @Override
    public void resize(int width, int height) {
    }

    @Override
    public void show() {
	System.out.println("Entered loading screen");
	core.callToConnect();
    }

    @Override
    public void hide() {
    }

    @Override
    public void pause() {
    }

    @Override
    public void resume() {
    }

    @Override
    public void dispose() {
    }
}
